//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Nql.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="NqlParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface INqlListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] NqlParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] NqlParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.playerQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerQuery([NotNull] NqlParser.PlayerQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.playerQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerQuery([NotNull] NqlParser.PlayerQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.teamQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeamQuery([NotNull] NqlParser.TeamQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.teamQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeamQuery([NotNull] NqlParser.TeamQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.gameQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameQuery([NotNull] NqlParser.GameQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.gameQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameQuery([NotNull] NqlParser.GameQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.seasonQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeasonQuery([NotNull] NqlParser.SeasonQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.seasonQuery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeasonQuery([NotNull] NqlParser.SeasonQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.playerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlayerList([NotNull] NqlParser.PlayerListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.playerList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlayerList([NotNull] NqlParser.PlayerListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.teamList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeamList([NotNull] NqlParser.TeamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.teamList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeamList([NotNull] NqlParser.TeamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.gameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGameList([NotNull] NqlParser.GameListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.gameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGameList([NotNull] NqlParser.GameListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.fieldSelection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldSelection([NotNull] NqlParser.FieldSelectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.fieldSelection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldSelection([NotNull] NqlParser.FieldSelectionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>aggregateField</c>
	/// labeled alternative in <see cref="NqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAggregateField([NotNull] NqlParser.AggregateFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>aggregateField</c>
	/// labeled alternative in <see cref="NqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAggregateField([NotNull] NqlParser.AggregateFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nameField</c>
	/// labeled alternative in <see cref="NqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameField([NotNull] NqlParser.NameFieldContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nameField</c>
	/// labeled alternative in <see cref="NqlParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameField([NotNull] NqlParser.NameFieldContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] NqlParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] NqlParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] NqlParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] NqlParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperator([NotNull] NqlParser.OperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.operator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperator([NotNull] NqlParser.OperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] NqlParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NqlParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] NqlParser.ValueContext context);
}
